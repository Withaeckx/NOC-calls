all_calls <- read.table("c:/Users/Andreas/Documents/Proximus Calls/Input_files/Calls_october.txt",
header = T, sep = "\t", as.is = T, fill = T)
all_calls$MED_SEG_START_TS <- as.POSIXct(all_calls$MED_SEG_START_TS,
format="%d/%m/%Y %H:%M:%S")
# Get data every 60 seconds
# Necessary to plot FOS vs FOT in one point in time
all_calls$MED_SEG_START_TS <- align.time(all_calls$MED_SEG_START_TS, 60)
# Make counter
all_calls$count <- 1
if (!require("dplyr")) install.packages("dplyr") ; library(dplyr)
if (!require("leaflet")) install.packages("leaflet") ; library(leaflet)
if (!require("lubridate")) install.packages("lubridate") ; library(lubridate)
if (!require("xts")) install.packages("xts") ; library(xts)
if (!require("dygraphs")) install.packages("dygraphs") ; library(dygraphs)
if (!require("shiny")) install.packages("shiny") ; library(shiny)
if (!require("scales")) install.packages("scales") ; library(scales)
if (!require("ggplot2")) install.packages("ggplot2") ; library(ggplot2)
if (!require("RColorBrewer")) install.packages("RColorBrewer") ; library(RColorBrewer)
?first
all_calls <- read.table("c:/Users/Andreas/Documents/Proximus Calls/Input_files/Calls_october.txt",
header = T, sep = "\t", as.is = T, fill = T)
all_calls$MED_SEG_START_TS <- as.POSIXct(all_calls$MED_SEG_START_TS,
format="%d/%m/%Y %H:%M:%S")
# Get data every 60 seconds
# Necessary to plot FOS vs FOT in one point in time
all_calls$MED_SEG_START_TS <- align.time(all_calls$MED_SEG_START_TS, 60)
# Make counter
all_calls$count <- 1
xplay <- read.table("c:/Users/Andreas/Documents/Proximus Calls/Input_files/xplay.txt",
header = T, sep = "\t", as.is = T)
### Get Address Table (only residential customers?)
address <- read.table("c:/Users/Andreas/Documents/Proximus Calls/Input_files/address.txt",
header = T, sep = "\t", as.is = T)
### Get location ZIP-codes
# Zipcode file:
# https://raw.githubusercontent.com/jief/zipcode-belgium/master/zipcode-belgium.csv
zips <- read.table("c:/Users/Andreas/Documents/Proximus Calls/Input_files/zips.txt",
header = T, sep = ",", as.is = T)
zips$zip <- as.character(zips$zip)
names(zips)[1] <- "CITY_ZIP"
